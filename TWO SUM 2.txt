1. Using HashMap:

class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int n = numbers.length;
        
        HashMap <Integer, Integer> map = new HashMap<>();
        
        for(int index1=0; index1<numbers.length; index1++){
            if(map.containsKey(target-numbers[index1])){
                return new int[] {map.get(target-numbers[index1]), index1+1};   
            }
            map.put(numbers[index1],index1+1);
        }
        return new int[] {};
    }
}
===============================================================
2. Using loops:

class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int n = numbers.length;
        
        int start =0, end=numbers.length-1;
        while(start<end){
            if(numbers[start]+numbers[end]>target){
               end--; 
            }
            else if(numbers[start]+numbers[end]<target){
                start++;
            }
            else{
                return new int[] {start+1,end+1};
            }
        }
        return new int[] {};
    }
}

TC: O(n)
SC: O(1)
================================================================